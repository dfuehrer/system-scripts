#!/bin/sh
##[ -z $1 ] && exit 1
#[ -z "$1" ] && f=. || f="$1"
#dir=$(dirname "$f")
#base=$(basename "$f")
#sxiv "$dir" -n $(ls -p "$dir" | sed '/\//d;/^'"$base"'$/q' | wc -l) &


# TODO make it so i can pass flags to sxiv (prolly should add that feature into clparser)
eval $(echo 'flags: t,T,time; parameters: f,F,file=.' | clparser "$@")
[ -z "$f" ] && { [ -z "$defaults" ] && f=. || f="$defaults"; }
[ -d "$f" ] && { setsid -f sxiv $f; exit; }
# TODO this assumes there are no spaces in the files which is bad
# TODO i hate using cat to do nothing cause its slow but i need to clean up for the other stuff so this is where im at
#[ -n "$t" ] && { fstr='%f %T@\n' && sortarg='-nk2' && cleanup='cutfield 1'; } || { fstr='%f\n' && cleanup=cat; }
[ -n "$t" ] && { fstr='%T@ %f\n' && sortarg='-nk1' && cleanup="sed s/^[^[:space:]]*\s\(.*\)$/\1/"; } || { fstr='%f\n' && cleanup=cat; }
dir=$(dirname "$f")
base=$(basename "$f")
# pass into file to try to only get images so that it errors less trying to read random files
# NOTE i want to use file -iZL so it looks in compressed files to see if there are images but it can crash on some I guess so I took it out
files="$(find "$dir" -maxdepth 1 -type f -printf "$fstr" | sort $sortarg | $cleanup | xargs -d '\n' file -iL | sed -n 's/^\(.*\):.*image\/.*$/\1/p')"
num="$(echo "$files" | sed '\|^'"$base"'$|q' | wc -l)"
echo "$files"
echo "$num"
# cant just use the dir cause hidden files screws with it
#[ -z "$t" ] && files="$dir"
# just grepping out this error cause i dont care, already tried to get rid of it as much as i could
echo "$files" | xargs -d '\n' sxiv -n "$num" 2>&1 | grep -v 'Error opening image' &
